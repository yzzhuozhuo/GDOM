{"ast":null,"code":"import _objectSpread from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\src\\\\components\\\\addUser\\\\addUser.js\";\nimport React, { Component } from 'react'; // import { Input } from 'antd';\n\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './addUser.css';\nimport ajax from '../../api/ajax';\nimport qs from 'qs';\nimport { Select } from 'antd';\nimport { DatePicker } from 'antd';\nconst Option = Select.Option; // const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // \"uid\":uid,\"username\":'杨卓',\"cno\":16666,\"role\": 'student', 'university': '西科大',\"college\":'电控',\"professional\":'zzz',\"clazz\":'aaa',\"entranceTime\":'2016'}\n      editing: false,\n      uid: '',\n      university: '',\n      college: '',\n      entranceTime: '',\n      role: '',\n      name: '',\n      cno: '',\n      sex: '',\n      professional: '',\n      clazz: ''\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass addUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      this.setState({\n        uid: this.props.uid\n      });\n    };\n\n    this.componentDidMount = () => {} //  const {uid} = this.state;\n    //  const data = {\"uid\":uid,\"username\":'杨卓',\"cno\":16666,\"role\": 'student', 'university': '西科大',\"college\":'电控',\"professional\":'zzz',\"clazz\":'aaa',\"entranceTime\":'2016'};\n    //  const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/mutilregister', qs.stringify(data), 'post');\n    //  reqResult(data).then(res => {\n    //   console.log(res);\n    //   // const data = res.data;\n    //  }).catch(err => {\n    //    console.log(err);\n    //  })\n    // 设置学校\n    ;\n\n    this.changeSchool = e => {\n      this.setState({\n        university: e.target.value\n      });\n    };\n\n    this.changeCollege = e => {\n      this.setState({\n        college: e.target.value\n      });\n    };\n\n    this.onChange = date => {\n      var d = new Date(date._d);\n      console.log(d);\n      var datetime = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\n      console.log(datetime);\n    };\n\n    this.handleChange = value => {\n      // console.log(`selected ${value}`)\n      this.setState({\n        role: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      console.log(this.state.dataSource);\n      const _this$state = this.state,\n            dataSource = _this$state.dataSource,\n            uid = _this$state.uid;\n      const data = [{\n        \"uid\": 2,\n        \"username\": \"杨卓\",\n        \"cno\": \"16666\",\n        \"role\": \"student\",\n        \"university\": \"西科大\",\n        \"college\": \"电控\",\n        \"professional\": \"zzz\",\n        \"clazz\": \"aaa\",\n        \"entranceTime\": \"2016\"\n      }];\n\n      const reqResult = data => ajax('http://47.94.103.140/gdom/lecture/multiregister', JSON.stringify(data), 'post');\n\n      reqResult(data).then(res => {\n        console.log(res); // const data = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            dataSource = _this$state2.dataSource;\n      const newData = {\n        key: count,\n        index: count,\n        name: '填写姓名',\n        cno: '填写学号',\n        sex: '填写性别',\n        professional: '填写专业',\n        clazz: '填写班级'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '编号',\n      dataIndex: 'index',\n      editable: false,\n      align: 'center'\n    }, {\n      title: '姓名',\n      dataIndex: 'name',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '工号(学号)',\n      dataIndex: 'cno',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '专业',\n      dataIndex: 'professional',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '班级(学生)',\n      dataIndex: 'clazz',\n      editable: true,\n      align: 'center'\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        index: '1',\n        name: '填写姓名',\n        cno: '填写学号',\n        sex: '填写性别',\n        professional: '填写专业',\n        clazz: '填写班级'\n      }],\n      count: 1,\n      uid: '',\n      username: ''\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"\\u5B66\\u6821: \"), React.createElement(Input, {\n      className: \"inp-school\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5B66\\u6821\",\n      onChange: this.changeSchool,\n      id: \"inp-school\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"\\u5B66\\u9662: \"), React.createElement(Input, {\n      className: \"inp-collage\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5B66\\u9662\",\n      onChange: this.changeCollege,\n      id: \"inp\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"\\u5165\\u5B66\\u65F6\\u95F4: \"), React.createElement(DatePicker, {\n      className: \"date\",\n      onChange: this.onChange,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"\\u89D2\\u8272\\u9009\\u62E9: \"), React.createElement(Select, {\n      className: \"select\",\n      style: {\n        width: 150\n      },\n      onChange: this.handleChange,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\\u5B66\\u751F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"\\u5B66\\u751F\"), React.createElement(Option, {\n      value: \"\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"\\u8001\\u5E08\"), React.createElement(Option, {\n      value: \"\\u8D85\\u7EA7\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"\\u8D85\\u7EA7\\u8001\\u5E08\")), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"primary\",\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      size: 'middle',\n      pagination: {\n        pageSize: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }));\n  }\n\n} // ReactDOM.render(<EditableTable />, mountNode);\n// export class addUser extends Component {\n//   onChange = (date) => {\n//     console.log(date);\n//   }\n//   handleChange = (value) => {\n//     console.log(`selected ${value}`)\n//   }\n//   handleSubmit = () => {\n//   }\n//   render() {\n//     return (\n//       <div id=\"main\" style={{ height: 500 }}>\n//         <label>学校: </label>\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\n//         <label>学院: </label>\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\n//         <span>入学时间: </span>\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\n//         <span>角色选择: </span>\n//         <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\n//           <Option value=\"学生\">学生</Option>\n//           <Option value=\"老师\">老师</Option>\n//           <Option value=\"超级老师\" >超级老师</Option>\n//         </Select>\n//         <EditableTable />\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\n//           Submit\n//         </Button>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default addUser;","map":{"version":3,"sources":["c:\\Users\\yangzhuo_sx\\Desktop\\GDOM\\GDOM\\gdom\\src\\components\\addUser\\addUser.js"],"names":["React","Component","Table","Input","Button","Popconfirm","Form","ajax","qs","Select","DatePicker","Option","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","uid","university","college","entranceTime","role","name","cno","sex","professional","clazz","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","addUser","constructor","componentWillMount","componentDidMount","changeSchool","target","value","changeCollege","onChange","date","d","Date","_d","console","log","datetime","getFullYear","getMonth","getDate","handleChange","handleSubmit","dataSource","data","reqResult","JSON","stringify","then","res","catch","err","handleDelete","key","filter","item","handleAdd","count","newData","row","findIndex","splice","columns","align","username","components","body","cell","map","col","onCell","width","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// import { Input } from 'antd';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport './addUser.css'\r\nimport ajax from '../../api/ajax'\r\nimport qs from 'qs'\r\nimport { Select } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nconst Option = Select.Option;\r\n// const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends Component {\r\n  state = {\r\n    // \"uid\":uid,\"username\":'杨卓',\"cno\":16666,\"role\": 'student', 'university': '西科大',\"college\":'电控',\"professional\":'zzz',\"clazz\":'aaa',\"entranceTime\":'2016'}\r\n    editing: false,\r\n    uid: '',\r\n    university: '',\r\n    college: '',\r\n    entranceTime: '',\r\n    role: '',\r\n    name: '',\r\n    cno: '',\r\n    sex: '',\r\n    professional: '',\r\n    clazz: ''\r\n  };\r\n\r\n \r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n        <div\r\n          className=\"editable-cell-value-wrap\"\r\n          style={{ paddingRight: 24 }}\r\n          onClick={this.toggleEdit}\r\n        >\r\n          {children}\r\n        </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n            children\r\n          )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass addUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '编号',\r\n        dataIndex: 'index',\r\n        editable: false,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '工号(学号)',\r\n        dataIndex: 'cno',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '专业',\r\n        dataIndex: 'professional',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '班级(学生)',\r\n        dataIndex: 'clazz',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          index: '1',\r\n          name: '填写姓名',\r\n          cno: '填写学号',\r\n          sex: '填写性别',\r\n          professional: '填写专业',\r\n          clazz: '填写班级'\r\n        },\r\n      ],\r\n      count: 1,\r\n      uid: '',\r\n      username:'',\r\n\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.setState({uid: this.props.uid});\r\n }\r\n\r\n componentDidMount = () => {\r\n  //  const {uid} = this.state;\r\n  //  const data = {\"uid\":uid,\"username\":'杨卓',\"cno\":16666,\"role\": 'student', 'university': '西科大',\"college\":'电控',\"professional\":'zzz',\"clazz\":'aaa',\"entranceTime\":'2016'};\r\n  //  const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/mutilregister', qs.stringify(data), 'post');\r\n  //  reqResult(data).then(res => {\r\n  //   console.log(res);\r\n  //   // const data = res.data;\r\n  //  }).catch(err => {\r\n  //    console.log(err);\r\n  //  })\r\n }\r\n\r\n  // 设置学校\r\n  changeSchool = (e) => {\r\n    this.setState({university: e.target.value});\r\n  }\r\n\r\n  // 设置学院\r\n  changeCollege = (e) => {\r\n    this.setState({college: e.target.value});\r\n  }\r\n\r\n  // 设置时间\r\n  onChange = (date) => {\r\n    var d = new Date(date._d);\r\n    console.log(d);\r\n    var datetime = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate()\r\n    console.log(datetime);\r\n  }\r\n\r\n  // 设置角色\r\n  handleChange = (value) => {\r\n    // console.log(`selected ${value}`)\r\n    this.setState({role: value})\r\n  }\r\n\r\n  handleSubmit = () => {\r\n   console.log(this.state.dataSource);\r\n   const {dataSource, uid,} = this.state;\r\n   const data = [{\"uid\": 2,\"username\":\"杨卓\",\"cno\":\"16666\",\"role\": \"student\", \"university\": \"西科大\",\"college\":\"电控\",\"professional\":\"zzz\",\"clazz\":\"aaa\",\"entranceTime\":\"2016\"}];\r\n   const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/multiregister', JSON.stringify(data), 'post');\r\n   reqResult(data).then(res => {\r\n    console.log(res);\r\n    // const data = res.data;\r\n   }).catch(err => {\r\n     console.log(err);\r\n   })\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      index: count,\r\n      name: '填写姓名',\r\n      cno: '填写学号',\r\n      sex: '填写性别',\r\n      professional: '填写专业',\r\n      clazz: '填写班级'\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <label>学校: </label>\r\n        <Input className=\"inp-school\" placeholder=\"请输入学校\" onChange={this.changeSchool} id=\"inp-school\" size=\"large\" />\r\n        <label>学院: </label>\r\n        <Input className=\"inp-collage\" placeholder=\"请输入学院\" onChange={this.changeCollege} id=\"inp\" size=\"large\" />\r\n        <span>入学时间: </span>\r\n        <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n        <span>角色选择: </span>\r\n        <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\r\n          <Option value=\"学生\">学生</Option>\r\n          <Option value=\"老师\">老师</Option>\r\n          <Option value=\"超级老师\" >超级老师</Option>\r\n        </Select>\r\n        <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n          提交\r\n        </Button>\r\n        {/* <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }} className=\"add\">\r\n          增加一行\r\n        </Button> */}\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          size={'middle'}\r\n          pagination={{ pageSize: 3 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<EditableTable />, mountNode);\r\n\r\n// export class addUser extends Component {\r\n//   onChange = (date) => {\r\n//     console.log(date);\r\n//   }\r\n\r\n//   handleChange = (value) => {\r\n//     console.log(`selected ${value}`)\r\n//   }\r\n\r\n//   handleSubmit = () => {\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div id=\"main\" style={{ height: 500 }}>\r\n//         <label>学校: </label>\r\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\r\n//         <label>学院: </label>\r\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\r\n//         <span>入学时间: </span>\r\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n//         <span>角色选择: </span>\r\n//         <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\r\n//           <Option value=\"学生\">学生</Option>\r\n//           <Option value=\"老师\">老师</Option>\r\n//           <Option value=\"超级老师\" >超级老师</Option>\r\n//         </Select>\r\n//         <EditableTable />\r\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n//           Submit\r\n//         </Button>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default addUser;\r\n"]},"metadata":{},"sourceType":"module"}