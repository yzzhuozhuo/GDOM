{"ast":null,"code":"import _objectSpread from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\src\\\\components\\\\projectManage\\\\projectManage.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd'; // import personalCenter from '../personalCenter/personalCenter';\n\nimport { Card } from 'antd';\nimport './projectManage.css';\nimport ajaxParam from '../../api/ajaxParam';\nimport ajax from '../../api/ajax';\nimport qs from 'qs';\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nclass EditableTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.componentDidMount = () => {\n      const _this$state = this.state,\n            uid = _this$state.uid,\n            dataKey = _this$state.dataKey;\n      const data = {\n        \"uid\": 2\n      };\n\n      const reqResult = data => ajaxParam('http://47.94.103.140/gdom/lecture/getallinfo', qs.stringify(data), 'post');\n\n      reqResult(data).then(res => {\n        console.log(res); //  const res_data = res.data;\n        //  const table_data = [];\n        //  res_data.forEach(item => {\n        //   let data_item = {\n        //     key: item[\"student\"].sid,\n        //     name: item[\"userInfo\"].username,\n        //     number: item[\"student\"].sno,\n        //     item: item[\"tittle\"],\n        //     midterm: item[\"student\"].midScore ? item[\"student\"].midScore : '—' ,\n        //     final: item[\"student\"].finalScore ? item[\"student\"].finalScore : '—',\n        //     score: item[\"student\"].score ? item[\"student\"].score : '—' ,\n        //   }\n        //   table_data.push(data_item)\n        // });\n        // // console.log(table_data);\n        // this.setState({\n        //   data: table_data\n        // })\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.state = {\n      editingKey: '',\n      data: [{\n        key: '0',\n        name: 'John',\n        number: 16406050305,\n        item: '基于ARM嵌入式技术实现的智能小车',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '1',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '2',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '3',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: '',\n        tags: ''\n      }]\n    };\n    this.columns = [{\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n      align: 'center'\n    }, {\n      title: '学号',\n      dataIndex: 'number',\n      key: 'number',\n      align: 'center',\n      editable: true\n    }, {\n      title: '题目',\n      dataIndex: 'item',\n      key: 'item',\n      align: 'center'\n    }, {\n      title: '期中成绩',\n      dataIndex: 'midterm',\n      key: 'midterm',\n      align: 'center',\n      editable: true\n    }, {\n      title: '期末成绩',\n      dataIndex: 'final',\n      key: 'final',\n      align: 'center',\n      editable: true\n    }, {\n      title: '最终成绩',\n      dataIndex: 'score',\n      key: 'score',\n      align: 'center',\n      editable: true\n    }, {\n      title: '操作',\n      dataIndex: 'operation',\n      width: '15%',\n      align: 'center',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"\\u786E\\u8BA4\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"\\u7F16\\u8F91\");\n      }\n    }];\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        }); // console.log(this.state.data);\n        // 学号 期中 期末 总成绩\n\n        const data = [{\n          \"sno\": '1648628',\n          \"midScore\": 90,\n          \"finalScore\": 99,\n          \"score\": 100\n        }];\n\n        const reqResult = data => ajax('http://47.94.103.140/gdom/lecture/updatescore', JSON.stringify(data), 'post');\n\n        reqResult(data).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n        console.log(this.state.data);\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: this.state.data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel,\n        pageSize: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst projectManage = Form.create()(EditableTable);\nexport default projectManage;","map":{"version":3,"sources":["c:\\Users\\yangzhuo_sx\\Desktop\\GDOM\\GDOM\\gdom\\src\\components\\projectManage\\projectManage.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Card","ajaxParam","ajax","qs","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","isEditing","key","state","editingKey","componentDidMount","uid","dataKey","data","reqResult","stringify","then","res","console","log","catch","err","cancel","setState","name","number","item","midterm","final","score","tags","columns","align","editable","width","text","form","save","marginRight","edit","validateFields","error","row","newData","findIndex","splice","JSON","push","components","body","cell","map","col","onCell","onChange","pageSize","projectManage","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\n// import personalCenter from '../personalCenter/personalCenter';\r\nimport { Card } from 'antd'\r\nimport './projectManage.css';\r\nimport ajaxParam from '../../api/ajaxParam';\r\nimport ajax from '../../api/ajax';\r\nimport qs from 'qs';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n            children\r\n          )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n  }\r\n}\r\n\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editingKey: '',\r\n      data: [\r\n        {\r\n          key: '0',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '基于ARM嵌入式技术实现的智能小车',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '1',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: '',\r\n          tags: '',\r\n        },\r\n      ]\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '学号',\r\n        dataIndex: 'number',\r\n        key: 'number',\r\n        align: 'center',\r\n        editable: true\r\n      },\r\n      {\r\n        title: '题目',\r\n        dataIndex: 'item',\r\n        key: 'item',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '期中成绩',\r\n        dataIndex: 'midterm',\r\n        key: 'midterm',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '期末成绩',\r\n        dataIndex: 'final',\r\n        key: 'final',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '最终成绩',\r\n        dataIndex: 'score',\r\n        key: 'score',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '操作',\r\n        dataIndex: 'operation',\r\n        width: '15%',\r\n        align: 'center',\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a href=\"javascript:;\" onClick={() => this.save(form, record.key)} style={{ marginRight: 8 }}>\r\n                    确认\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\r\n                <a>取消</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n              <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\r\n                编辑\r\n            </a>\r\n            );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  componentDidMount = () => {\r\n    const { uid, dataKey} = this.state;\r\n    const data = {\"uid\":2};\r\n    const reqResult = (data) => ajaxParam('http://47.94.103.140/gdom/lecture/getallinfo', qs.stringify(data), 'post');\r\n    reqResult(data).then(res => {\r\n     console.log(res);\r\n    //  const res_data = res.data;\r\n    //  const table_data = [];\r\n    //  res_data.forEach(item => {\r\n    //   let data_item = {\r\n    //     key: item[\"student\"].sid,\r\n    //     name: item[\"userInfo\"].username,\r\n    //     number: item[\"student\"].sno,\r\n    //     item: item[\"tittle\"],\r\n    //     midterm: item[\"student\"].midScore ? item[\"student\"].midScore : '—' ,\r\n    //     final: item[\"student\"].finalScore ? item[\"student\"].finalScore : '—',\r\n    //     score: item[\"student\"].score ? item[\"student\"].score : '—' ,\r\n    //   }\r\n    //   table_data.push(data_item)\r\n    // });\r\n    // // console.log(table_data);\r\n    // this.setState({\r\n    //   data: table_data\r\n    // })\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        this.setState({ data: newData, editingKey: '' });\r\n        // console.log(this.state.data);\r\n        // 学号 期中 期末 总成绩\r\n        const data = [{\"sno\":'1648628',\"midScore\":90,\"finalScore\":99,\"score\":100}];\r\n        const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/updatescore', JSON.stringify(data), 'post');\r\n        reqResult(data).then(res => {\r\n          console.log(res)\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: '' });\r\n        console.log(this.state.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: this.cancel,\r\n            pageSize: 4\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst projectManage = Form.create()(EditableTable);\r\nexport default projectManage;"]},"metadata":{},"sourceType":"module"}