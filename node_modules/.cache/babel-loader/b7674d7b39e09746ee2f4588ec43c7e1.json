{"ast":null,"code":"import _objectSpread from \"D:\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"D:\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\GDOM\\\\gdom\\\\src\\\\components\\\\projectManage\\\\projectManage.js\";\nimport React, { Component } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd'; // import personalCenter from '../personalCenter/personalCenter';\n\nimport { Card } from 'antd';\nimport './projectManage.css';\nimport ajax from '../../api/ajax';\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderCell);\n  }\n\n}\n\nclass EditableTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isEditing = record => record.key === this.state.editingKey;\n\n    this.cancel = () => {\n      this.setState({\n        editingKey: ''\n      });\n    };\n\n    this.componentDidMount = () => {// const reqResult = () => ajax('47.94.103.140/gdom/lecture/imine');\n      // reqResult().then(res => {\n      //   console.log(res);\n      // }).catch(err => {\n      //   console.log(err);\n      // })\n    };\n\n    this.state = {\n      editingKey: '',\n      data: [{\n        key: '0',\n        name: 'John',\n        number: 16406050305,\n        item: '基于ARM嵌入式技术实现的智能小车',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '1',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '2',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }, {\n        key: '3',\n        name: 'John',\n        number: 16406050305,\n        item: '高数',\n        midterm: 90,\n        final: 90,\n        score: 95,\n        tags: ''\n      }]\n    };\n    this.columns = [{\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n      align: 'center'\n    }, {\n      title: '学号',\n      dataIndex: 'number',\n      key: 'number',\n      align: 'center'\n    }, {\n      title: '题目',\n      dataIndex: 'item',\n      key: 'item',\n      align: 'center'\n    }, {\n      title: '期中成绩',\n      dataIndex: 'midterm',\n      key: 'midterm',\n      align: 'center',\n      editable: true\n    }, {\n      title: '期末成绩',\n      dataIndex: 'final',\n      key: 'final',\n      align: 'center',\n      editable: true\n    }, {\n      title: '最终成绩',\n      dataIndex: 'score',\n      key: 'score',\n      align: 'center',\n      editable: true\n    }, {\n      title: '编辑',\n      dataIndex: 'operation',\n      render: (text, record) => {\n        const editingKey = this.state.editingKey;\n        const editable = this.isEditing(record);\n        return editable ? React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(EditableContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, form => React.createElement(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => this.save(form, record.key),\n          style: {\n            marginRight: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Save\")), React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: () => this.cancel(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Cancel\"))) : React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => this.edit(record.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    }];\n  }\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, _objectSpread({}, item, row));\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n        console.log(this.state.data);\n      } else {\n        newData.push(row);\n        this.setState({\n          data: newData,\n          editingKey: ''\n        });\n        console.log(this.state.data);\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({\n      editingKey: key\n    });\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      });\n    });\n    return React.createElement(EditableContext.Provider, {\n      value: this.props.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      bordered: true,\n      dataSource: this.state.data,\n      columns: columns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: this.cancel\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst projectManage = Form.create()(EditableTable);\nexport default projectManage; // ReactDOM.render(<EditableFormTable />, mountNode);","map":{"version":3,"sources":["D:\\GDOM\\gdom\\src\\components\\projectManage\\projectManage.js"],"names":["React","Component","Table","Input","InputNumber","Popconfirm","Form","Card","ajax","EditableContext","createContext","EditableCell","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","EditableTable","constructor","isEditing","key","state","editingKey","cancel","setState","componentDidMount","data","name","number","item","midterm","final","score","tags","columns","align","editable","text","form","save","marginRight","edit","validateFields","error","row","newData","findIndex","splice","console","log","push","components","body","cell","map","col","onCell","onChange","projectManage","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\n// import personalCenter from '../personalCenter/personalCenter';\r\nimport { Card } from 'antd'\r\nimport './projectManage.css'\r\nimport ajax from '../../api/ajax'\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n            children\r\n          )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n  }\r\n}\r\n\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editingKey: '',\r\n      data: [\r\n        {\r\n          key: '0',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '基于ARM嵌入式技术实现的智能小车',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '1',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'John',\r\n          number: 16406050305,\r\n          item: '高数',\r\n          midterm: 90,\r\n          final: 90,\r\n          score: 95,\r\n          tags: '',\r\n        },\r\n      ]\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '学号',\r\n        dataIndex: 'number',\r\n        key: 'number',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '题目',\r\n        dataIndex: 'item',\r\n        key: 'item',\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '期中成绩',\r\n        dataIndex: 'midterm',\r\n        key: 'midterm',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '期末成绩',\r\n        dataIndex: 'final',\r\n        key: 'final',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '最终成绩',\r\n        dataIndex: 'score',\r\n        key: 'score',\r\n        align: 'center',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '编辑',\r\n        dataIndex: 'operation',\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"javascript:;\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Save\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\r\n                <a>Cancel</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n              <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\r\n                Edit\r\n            </a>\r\n            );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        this.setState({ data: newData, editingKey: '' });\r\n        console.log(this.state.data);\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: '' });\r\n        console.log(this.state.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // const reqResult = () => ajax('47.94.103.140/gdom/lecture/imine');\r\n    // reqResult().then(res => {\r\n    //   console.log(res);\r\n    // }).catch(err => {\r\n    //   console.log(err);\r\n    // })\r\n  }\r\n\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: this.cancel,\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst projectManage = Form.create()(EditableTable);\r\nexport default projectManage;\r\n// ReactDOM.render(<EditableFormTable />, mountNode);"]},"metadata":{},"sourceType":"module"}