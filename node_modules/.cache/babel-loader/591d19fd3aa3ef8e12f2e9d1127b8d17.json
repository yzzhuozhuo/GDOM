{"ast":null,"code":"// 能发送ajax请求的函数模块\n// 函数的返回值是promise对象\nimport axios from 'axios';\nexport default function ajax(url, data = {}, type = 'GET') {\n  if (type.toUpperCase() === 'GET') {\n    // 拼请求参数串\n    const paramStr = Object.keys(data).map(key => {\n      return \"\".concat(key, \"=\").concat(data[key]);\n    }).join('&');\n    const finalUrl = paramStr ? \"\".concat(url, \"?\").concat(paramStr) : url;\n    return axios.get(finalUrl);\n  } else {\n    // 使用axios发post请求 application/json; charset=utf-8\n    return axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    });\n  }\n}","map":{"version":3,"sources":["c:\\Users\\yangzhuo_sx\\Desktop\\GDOM\\GDOM\\gdom\\src\\api\\ajax.js"],"names":["axios","ajax","url","data","type","toUpperCase","paramStr","Object","keys","map","key","join","finalUrl","get","post","headers"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAmBC,IAAI,GAAG,EAA1B,EAA8BC,IAAI,GAAG,KAArC,EAA4C;AACzD,MAAIA,IAAI,CAACC,WAAL,OAAuB,KAA3B,EAAkC;AAChC;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,GAAlB,CAAsBC,GAAG,IAAI;AAC5C,uBAAUA,GAAV,cAAiBP,IAAI,CAACO,GAAD,CAArB;AACD,KAFgB,EAEdC,IAFc,CAET,GAFS,CAAjB;AAGA,UAAMC,QAAQ,GAAGN,QAAQ,aAAMJ,GAAN,cAAaI,QAAb,IAA0BJ,GAAnD;AACA,WAAOF,KAAK,CAACa,GAAN,CAAUD,QAAV,CAAP;AACD,GAPD,MAQK;AACH;AACA,WAAOZ,KAAK,CAACc,IAAN,CAAWZ,GAAX,EAAgBC,IAAhB,EAAsB;AAAEY,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAtB,CAAP;AACD;AACF","sourcesContent":["// 能发送ajax请求的函数模块\r\n// 函数的返回值是promise对象\r\nimport axios from 'axios'\r\n\r\nexport default function ajax(url, data = {}, type = 'GET') {\r\n  if (type.toUpperCase() === 'GET') {\r\n    // 拼请求参数串\r\n    const paramStr = Object.keys(data).map(key => {\r\n      return `${key}=${data[key]}`\r\n    }).join('&')\r\n    const finalUrl = paramStr ? `${url}?${paramStr}` : url\r\n    return axios.get(finalUrl)\r\n  }\r\n  else {\r\n    // 使用axios发post请求 application/json; charset=utf-8\r\n    return axios.post(url, data, { headers: { 'Content-Type': 'application/json; charset=utf-8' } });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}