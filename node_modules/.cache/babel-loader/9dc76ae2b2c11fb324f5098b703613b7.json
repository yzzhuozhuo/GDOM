{"ast":null,"code":"import _objectSpread from \"D:\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"D:\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\GDOM\\\\gdom\\\\src\\\\components\\\\addUser\\\\addUser.js\";\nimport React, { Component } from 'react'; // import { Input } from 'antd';\n\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './addUser.css';\nimport { Select } from 'antd';\nimport { DatePicker } from 'antd';\nconst Option = Select.Option; // const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '编号',\n      dataIndex: 'index',\n      editable: false,\n      width: 70\n    }, {\n      title: '姓名',\n      dataIndex: 'name',\n      editable: true,\n      width: 100\n    }, {\n      title: '工号',\n      dataIndex: 'cno',\n      editable: true,\n      align: 'center',\n      width: 150\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      editable: true,\n      width: 150\n    }, {\n      title: '专业',\n      dataIndex: 'professional',\n      editable: true,\n      align: 'center',\n      width: 150\n    }, {\n      title: '班级',\n      dataIndex: 'clazz',\n      editable: true,\n      align: 'center',\n      width: 150\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        index: '0',\n        name: '杨卓',\n        cno: '16406050305',\n        sex: '女',\n        professional: '自动化',\n        clazz: '1603班'\n      }, {\n        key: '1',\n        index: '1',\n        name: '杨卓',\n        cno: '16406050305',\n        sex: '女',\n        professional: '自动化',\n        clazz: '1603班'\n      }],\n      count: 2\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      size: 'middle',\n      scroll: {\n        y: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }));\n  }\n\n} // ReactDOM.render(<EditableTable />, mountNode);\n\n\nexport class addUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = date => {\n      console.log(date);\n    };\n\n    this.handleChange = value => {\n      console.log(\"selected \".concat(value));\n    };\n\n    this.handleSubmit = () => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"main\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"\\u5B66\\u6821: \"), React.createElement(Input, {\n      className: \"inp-school\",\n      value: \"\\u897F\\u5B89\\u79D1\\u6280\\u5927\\u5B66\",\n      id: \"inp-school\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"\\u5B66\\u9662: \"), React.createElement(Input, {\n      className: \"inp-collage\",\n      value: \"\\u7535\\u6C14\\u4E0E\\u63A7\\u5236\\u5DE5\\u7A0B\\u5B66\\u9662\",\n      id: \"inp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"\\u5165\\u5B66\\u65F6\\u95F4: \"), React.createElement(DatePicker, {\n      className: \"date\",\n      onChange: this.onChange,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"\\u89D2\\u8272\\u9009\\u62E9: \"), React.createElement(Select, {\n      className: \"select\",\n      style: {\n        width: 150\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\\u5B66\\u751F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"\\u5B66\\u751F\"), React.createElement(Option, {\n      value: \"\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"\\u8001\\u5E08\"), React.createElement(Option, {\n      value: \"\\u8D85\\u7EA7\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"\\u8D85\\u7EA7\\u8001\\u5E08\")), React.createElement(EditableTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"primary\",\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\nexport default addUser;","map":{"version":3,"sources":["D:\\GDOM\\gdom\\src\\components\\addUser\\addUser.js"],"names":["React","Component","Table","Input","Button","Popconfirm","Form","Select","DatePicker","Option","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","EditableTable","constructor","handleDelete","key","dataSource","filter","item","row","newData","findIndex","splice","columns","width","align","name","cno","sex","professional","clazz","count","components","body","cell","map","col","onCell","y","addUser","onChange","date","console","log","handleChange","value","handleSubmit","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// import { Input } from 'antd';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport './addUser.css'\r\nimport { Select } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nconst Option = Select.Option;\r\n// const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '编号',\r\n        dataIndex: 'index',\r\n        editable: false,\r\n        width: 70\r\n      },\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        editable: true,\r\n        width: 100\r\n      },\r\n      {\r\n        title: '工号',\r\n        dataIndex: 'cno',\r\n        editable: true,\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        editable: true,\r\n        width: 150\r\n      },\r\n      {\r\n        title: '专业',\r\n        dataIndex: 'professional',\r\n        editable: true,\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n      {\r\n        title: '班级',\r\n        dataIndex: 'clazz',\r\n        editable: true,\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          index: '0',\r\n          name: '杨卓',\r\n          cno: '16406050305',\r\n          sex: '女',\r\n          professional: '自动化',\r\n          clazz: '1603班'\r\n        },\r\n        {\r\n          key: '1',\r\n          index: '1',\r\n          name: '杨卓',\r\n          cno: '16406050305',\r\n          sex: '女',\r\n          professional: '自动化',\r\n          clazz: '1603班'\r\n        },\r\n        // {\r\n        //   key: '2',\r\n        //   index: '1',\r\n        //   name: '杨卓',\r\n        //   cno: '16406050305',\r\n        //   sex: '女',\r\n        //   professional: '自动化',\r\n        //   clazz: '1603班'\r\n        // },\r\n      ],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  // handleAdd = () => {\r\n  //   const { count, dataSource } = this.state;\r\n  //   const newData = {\r\n  //     key: count,\r\n  //     name: `Edward King ${count}`,\r\n  //     age: 32,\r\n  //     address: `London, Park Lane no. ${count}`,\r\n  //   };\r\n  //   this.setState({\r\n  //     dataSource: [...dataSource, newData],\r\n  //     count: count + 1,\r\n  //   });\r\n  // };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          size={'middle'}\r\n          scroll={{y:200}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<EditableTable />, mountNode);\r\n\r\nexport class addUser extends Component {\r\n  onChange = (date) => {\r\n    console.log(date);\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    console.log(`selected ${value}`)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"main\" style={{height: 500}}>\r\n        <label>学校: </label>\r\n        <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\"/>\r\n        <label>学院: </label>\r\n        <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\"/>\r\n        <span>入学时间: </span>\r\n        <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" />\r\n        <span>角色选择: </span>\r\n        <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange}>\r\n          <Option value=\"学生\">学生</Option>\r\n          <Option value=\"老师\">老师</Option>\r\n          <Option value=\"超级老师\" >超级老师</Option>\r\n        </Select>\r\n        <EditableTable />\r\n        <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default addUser\r\n"]},"metadata":{},"sourceType":"module"}