{"ast":null,"code":"var _jsxFileName = \"D:\\\\GDOM\\\\gdom\\\\src\\\\components\\\\quickLogIn\\\\quickLogIn.js\";\nimport { runInContext } from \"vm\";\nimport React, { Component } from 'react';\nimport { Input, Alert } from 'antd';\nimport { Button } from 'antd';\nimport './quickLogIn.css';\nimport ajax from '../../api/ajax';\nimport qs from 'qs';\n\nclass quickLogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isNote: true,\n      isError: false,\n      mobile: '',\n      code: '' // 获取用户输入的手机号\n\n    };\n\n    this.setMobile = e => {\n      e.preventDefault();\n      this.setState({\n        mobile: e.target.value\n      });\n    };\n\n    this.setCode = e => {\n      e.preventDefault();\n      this.setState({\n        code: e.target.value\n      });\n    };\n\n    this.checkAccount = (rule, value, callback) => {\n      //与表单数据进行关联\n      const form = this.props.form; //正则用//包起来\n\n      var regex = /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/;\n\n      if (value) {\n        //react使用正则表达式变量的test方法进行校验，直接使用value.match(regex)显示match未定义\n        if (regex.test(value)) {\n          callback();\n        } else {\n          callback('请输入正确的手机号码！');\n        }\n      } else {//这里的callback函数会报错\n      }\n    };\n\n    this.logIn = () => {\n      const code = this.state.code;\n      const mobile = this.state.mobile;\n      const data = {\n        \"mobile\": mobile,\n        \"vcode\": code\n      };\n\n      const reqResult = data => ajax('http://47.94.103.140/gdom/login/mobile', qs.stringify(data), 'post');\n\n      reqResult(data).then(res => {\n        if (res.data === 'success') {// console.log(res)\n          // this.props.history.replace({ pathname: '/teacherHome', query: { 'id': 123, 'name': 'yz' } });\n        } else {\n          this.setState({\n            isError: true\n          });\n          setTimeout(() => {\n            this.setState({\n              isError: false\n            });\n          }, 2000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getCode = () => {\n      const buttonValue = this.refs.but.props.children;\n      const mobile = this.state.mobile;\n\n      if (buttonValue === '获取短信验证码') {\n        // 请求获取短信验证码的接口\n        const data = {\n          \"mobile\": mobile\n        };\n\n        const reqResult = data => ajax('http://47.94.103.140/gdom/login/message', qs.stringify(data), 'post');\n\n        reqResult(data).then(res => {\n          if (res.data === 'success') {// console.log(res)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        console.log(\"短信验证\");\n      } else {\n        // 请求获取语音验证码的接口\n        const data = {\n          \"mobile\": mobile\n        };\n\n        const reqResult = data => ajax('http://47.94.103.140/gdom/login/speech', qs.stringify(data), 'post');\n\n        reqResult(data).then(res => {\n          if (res.data === 'success') {// console.log(res)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        console.log(\"语音验证\");\n      }\n    };\n\n    this.changStyle = () => {\n      this.setState(prevState => ({\n        isNote: !prevState.isNote\n      }));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isNote = _this$state.isNote,\n          isError = _this$state.isError;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u6B22\\u8FCE\\u767B\\u9646\\u7C89\\u7B14\\u5934\\u7CFB\\u7EDF\"), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, getFieldDecorator('mobile', {\n      rules: [{\n        type: 'string',\n        required: true,\n        message: '请输入手机号码!'\n      }, {\n        //这里input内的输入内容进行绑定函数即可，在Input里面无需进行函数绑定开使用验证（红色部分）\n        validator: this.checkAccount\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7...\",\n      className: \"InpNumber\",\n      onChange: this.setMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) // <Input style={{ width: 180 }} onBlur={this.checkAccount} />\n    ), React.createElement(\"div\", {\n      className: \"getCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n      className: \"Inp\",\n      size: 'large',\n      onChange: this.setCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      ref: \"but\",\n      className: \"btn\",\n      size: 'large',\n      onClick: this.getCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, isNote ? '获取短信验证码' : '获取语音验证码')), React.createElement(\"p\", {\n      className: \"change\",\n      onClick: this.changStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, isNote ? '语音验证' : '短信验证'), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.logIn,\n      style: {\n        width: \"300px\"\n      },\n      size: 'large',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u5FEB\\u901F\\u767B\\u9646\"), isError ? React.createElement(Alert, {\n      message: \"Error\",\n      description: \"\\u9A8C\\u8BC1\\u5931\\u8D25\\uFF0C\\u8BF7\\u91CD\\u65B0\\u9A8C\\u8BC1\",\n      type: \"error\",\n      showIcon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default quickLogIn;","map":{"version":3,"sources":["D:\\GDOM\\gdom\\src\\components\\quickLogIn\\quickLogIn.js"],"names":["runInContext","React","Component","Input","Alert","Button","ajax","qs","quickLogIn","state","isNote","isError","mobile","code","setMobile","e","preventDefault","setState","target","value","setCode","checkAccount","rule","callback","form","props","regex","test","logIn","data","reqResult","stringify","then","res","setTimeout","catch","err","console","log","getCode","buttonValue","refs","but","children","changStyle","prevState","render","getFieldDecorator","rules","type","required","message","validator","width"],"mappings":"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","sourcesContent":["import { runInContext } from \"vm\";\r\n\r\nimport React, { Component } from 'react';\r\nimport { Input, Alert } from 'antd';\r\nimport { Button } from 'antd';\r\nimport './quickLogIn.css';\r\nimport ajax from '../../api/ajax';\r\nimport qs from 'qs';\r\n\r\nclass quickLogIn extends Component {\r\n  state = {\r\n    isNote: true,\r\n    isError: false,\r\n    mobile: '',\r\n    code: ''\r\n  }\r\n\r\n  // 获取用户输入的手机号\r\n  setMobile = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ mobile: e.target.value });\r\n  };\r\n\r\n  // 获取用户收入的验证码\r\n  setCode = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ code: e.target.value });\r\n  }\r\n\r\n  //验证手机号\r\n  checkAccount = (rule, value, callback) => {\r\n    //与表单数据进行关联\r\n    const form = this.props.form;\r\n    //正则用//包起来\r\n    var regex = /^((\\+)?86|((\\+)?86)?)0?1[3458]\\d{9}$/;\r\n    if (value) {\r\n      //react使用正则表达式变量的test方法进行校验，直接使用value.match(regex)显示match未定义\r\n      if (regex.test(value)) {\r\n        callback();\r\n      } else {\r\n        callback('请输入正确的手机号码！');\r\n      }\r\n    } else {\r\n      //这里的callback函数会报错\r\n    }\r\n  }\r\n\r\n  // 登陆\r\n  logIn = () => {\r\n    const code = this.state.code;\r\n    const mobile = this.state.mobile;\r\n    const data = { \"mobile\": mobile, \"vcode\": code };\r\n    const reqResult = (data) => ajax('http://47.94.103.140/gdom/login/mobile', qs.stringify(data), 'post');\r\n    reqResult(data).then(res => {\r\n      if (res.data === 'success') {\r\n        // console.log(res)\r\n        // this.props.history.replace({ pathname: '/teacherHome', query: { 'id': 123, 'name': 'yz' } });\r\n      } else {\r\n        this.setState({ isError: true })\r\n        setTimeout(() => {\r\n          this.setState({ isError: false })\r\n        }, 2000)\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  // 获取验证码 \r\n  getCode = () => {\r\n    const buttonValue = this.refs.but.props.children;\r\n    const mobile = this.state.mobile;\r\n    if (buttonValue === '获取短信验证码') {\r\n      // 请求获取短信验证码的接口\r\n      const data = { \"mobile\": mobile };\r\n      const reqResult = (data) => ajax('http://47.94.103.140/gdom/login/message', qs.stringify(data), 'post');\r\n      reqResult(data).then(res => {\r\n        if (res.data === 'success') {\r\n          // console.log(res)\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n      console.log(\"短信验证\");\r\n    } else {\r\n      // 请求获取语音验证码的接口\r\n      const data = { \"mobile\": mobile };\r\n      const reqResult = (data) => ajax('http://47.94.103.140/gdom/login/speech', qs.stringify(data), 'post');\r\n      reqResult(data).then(res => {\r\n        if (res.data === 'success') {\r\n          // console.log(res)\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n      console.log(\"语音验证\");\r\n    }\r\n  };\r\n\r\n  // 改变button的内容\r\n  changStyle = () => {\r\n    this.setState(prevState => ({\r\n      isNote: !prevState.isNote\r\n    }))\r\n  };\r\n\r\n  render() {\r\n    const { isNote, isError } = this.state;\r\n    return (\r\n      <div>\r\n        <p className=\"title\">欢迎登陆粉笔头系统</p>\r\n        <div className=\"main\">\r\n          {getFieldDecorator('mobile', {\r\n            rules: [{ type: 'string', required: true, message: '请输入手机号码!' }, {\r\n              //这里input内的输入内容进行绑定函数即可，在Input里面无需进行函数绑定开使用验证（红色部分）\r\n              validator: this.checkAccount,\r\n            }],\r\n          })(\r\n            <Input placeholder=\"请输入手机号...\" className=\"InpNumber\" onChange={this.setMobile} />\r\n            // <Input style={{ width: 180 }} onBlur={this.checkAccount} />\r\n          )}\r\n          {/* <Input placeholder=\"请输入手机号...\" className=\"InpNumber\" onChange={this.setMobile} /> */}\r\n          <div className=\"getCode\">\r\n            <Input placeholder=\"请输入验证码\" className=\"Inp\" size={'large'} onChange={this.setCode} />\r\n            <Button type=\"primary\" ref=\"but\" className=\"btn\" size={'large'} onClick={this.getCode}>{isNote ? '获取短信验证码' : '获取语音验证码'}</Button>\r\n          </div>\r\n          <p className=\"change\" onClick={this.changStyle}>{isNote ? '语音验证' : '短信验证'}</p>\r\n          <Button type=\"primary\" onClick={this.logIn} style={{ width: \"300px\" }} size={'large'}>快速登陆</Button>\r\n          {isError ? <Alert\r\n            message=\"Error\"\r\n            description=\"验证失败，请重新验证\"\r\n            type=\"error\"\r\n            showIcon\r\n          /> : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default quickLogIn;"]},"metadata":{},"sourceType":"module"}