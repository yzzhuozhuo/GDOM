{"ast":null,"code":"var _jsxFileName = \"D:\\\\GDOM\\\\gdom\\\\src\\\\components\\\\logIn\\\\logIn.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './logIn.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nclass NormalLoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), \" \"), \" \", React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), \" \"), \" \", React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" Remember me \")), \" \", React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Forgot password \"), \" \", React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" register now! \"), \" \"), \" \"), \" \");\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["D:\\GDOM\\gdom\\src\\components\\logIn\\logIn.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","rules","required","message","color","valuePropName","initialValue","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport './logIn.css';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nclass NormalLoginForm extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n            const { getFieldDecorator } = this.props.form;\r\n            return ( <\r\n                    div className = \"main\" >\r\n                    <\r\n                    Form onSubmit = { this.handleSubmit }\r\n                    className = \"login-form\" >\r\n                    <\r\n                    Form.Item > {\r\n                        getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: 'Please input your username!' }],\r\n                        })( <\r\n                            Input prefix = { < Icon type = \"user\"\r\n                                style = {\r\n                                    { color: 'rgba(0,0,0,.25)' } }\r\n                                />}\r\n                                placeholder = \"Username\" /\r\n                                > ,\r\n                            )\r\n                        } <\r\n                        /Form.Item> <\r\n                        Form.Item > {\r\n                            getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })( <\r\n                                Input prefix = { < Icon type = \"lock\"\r\n                                    style = {\r\n                                        { color: 'rgba(0,0,0,.25)' } }\r\n                                    />}\r\n                                    type = \"password\"\r\n                                    placeholder = \"Password\" /\r\n                                    > ,\r\n                                )\r\n                            } <\r\n                            /Form.Item> <\r\n                            Form.Item > {\r\n                                getFieldDecorator('remember', {\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true,\r\n                                })( < Checkbox > Remember me < /Checkbox>)} <\r\n                                    a className = \"login-form-forgot\"\r\n                                    href = \"\" >\r\n                                    Forgot password <\r\n                                    /a> <\r\n                                    Button type = \"primary\"\r\n                                    htmlType = \"submit\"\r\n                                    className = \"login-form-button\" >\r\n                                    Log in\r\n                                    <\r\n                                    /Button>\r\n                                    Or < a href = \"\" > register now! < /a> <\r\n                                    /Form.Item> <\r\n                                    /Form> <\r\n                                    /div>\r\n                                );\r\n                            }\r\n                        }\r\n\r\n                        const WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\n                        export default WrappedNormalLoginForm;"]},"metadata":{},"sourceType":"module"}