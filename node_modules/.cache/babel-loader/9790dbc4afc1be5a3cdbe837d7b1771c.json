{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\src\\\\components\\\\avatarUpload\\\\avatarUpload.js\";\nimport React, { Component } from 'react';\nimport { Upload, Icon, message } from 'antd';\nimport './avatarUpload.css';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJPG && isLt2M;\n}\n\nclass Avatar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u5934\\u50CF\"));\n    const imageUrl = this.state.imageUrl;\n    return React.createElement(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : uploadButton);\n  }\n\n}\n\nexport default Avatar;","map":{"version":3,"sources":["c:\\Users\\yangzhuo_sx\\Desktop\\GDOM\\GDOM\\gdom\\src\\components\\avatarUpload\\avatarUpload.js"],"names":["React","Component","Upload","Icon","message","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJPG","type","error","isLt2M","size","Avatar","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","render","uploadButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,OAAO,oBAAP;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,KAAc,YAA5B;;AACA,MAAI,CAACD,KAAL,EAAY;AACVX,IAAAA,OAAO,CAACa,KAAR,CAAc,+BAAd;AACD;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXd,IAAAA,OAAO,CAACa,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,KAAK,IAAIG,MAAhB;AACD;;AAED,MAAME,MAAN,SAAqBnB,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BoB,KAD6B,GACrB;AACNC,MAAAA,OAAO,EAAE;AADH,KADqB;;AAAA,SAK7BC,YAL6B,GAKdC,IAAI,IAAI;AACrB,UAAIA,IAAI,CAACV,IAAL,CAAUW,MAAV,KAAqB,WAAzB,EAAsC;AACpC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AACD,UAAIE,IAAI,CAACV,IAAL,CAAUW,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACApB,QAAAA,SAAS,CAACmB,IAAI,CAACV,IAAL,CAAUa,aAAX,EAA0BC,QAAQ,IACzC,KAAKF,QAAL,CAAc;AACZE,UAAAA,QADY;AAEZN,UAAAA,OAAO,EAAE;AAFG,SAAd,CADO,CAAT;AAMD;AACF,KAnB4B;AAAA;;AAqB7BO,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF;AAMA,UAAMM,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA5B;AACA,WACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAC,cAFX;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAIE,MAAA,cAAc,EAAE,KAJlB;AAKE,MAAA,MAAM,EAAC,kDALT;AAME,MAAA,YAAY,EAAEf,YANhB;AAOE,MAAA,QAAQ,EAAE,KAAKU,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGK,QAAQ,GAAG;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,GAAG,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAyCE,YATpD,CADF;AAaD;;AA1C4B;;AA6C/B,eAAeV,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Upload, Icon, message } from 'antd';\r\nimport './avatarUpload.css';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJPG && isLt2M;\r\n}\r\n\r\nclass Avatar extends Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className=\"ant-upload-text\">上传头像</div>\r\n      </div>\r\n    );\r\n    const imageUrl = this.state.imageUrl;\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : uploadButton}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}