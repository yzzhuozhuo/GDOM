{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\src\\\\components\\\\subjectIssue\\\\subjectIssue.js\";\nimport React, { Component } from 'react'; // import { Input } from 'antd';\n\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './subjectIssue.css';\nimport ajax from '../../api/ajax';\nimport qs from 'qs';\nimport { Select } from 'antd';\nimport { DatePicker } from 'antd';\nconst Option = Select.Option; // const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass subjectIssue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeBengin = date => {\n      console.log(date);\n    };\n\n    this.onChangeLast = data => {\n      console.log(data);\n    };\n\n    this.handleChange = value => {\n      console.log(\"selected \".concat(value));\n    };\n\n    this.handleSubmit = () => {\n      console.log(this.state.dataSource);\n      const _this$state = this.state,\n            dataSource = _this$state.dataSource,\n            uid = _this$state.uid,\n            lno = _this$state.lno,\n            titile = _this$state.titile,\n            university = _this$state.university,\n            college = _this$state.college,\n            startTime = _this$state.startTime,\n            endTime = _this$state.endTime;\n      const data = [{\n        \"lno\": \"16666\",\n        \"titile\": \"sbbbsf\",\n        \"university\": \"西科大\",\n        \"college\": \"电控\",\n        \"startTime\": '2016-03-03 00:00:00',\n        \"endTime\": '2016-03-03 00:00:00'\n      }];\n\n      const reqResult = data => ajax('http://47.94.103.140/gdom/lecture/publish', JSON.stringify(data), 'post');\n\n      reqResult(data).then(res => {\n        console.log(res); // const data = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$state2 = this.state,\n            count = _this$state2.count,\n            dataSource = _this$state2.dataSource;\n      const newData = {\n        key: count,\n        index: count,\n        item: '填写题目',\n        teacher: '填写导师',\n        cno: '填写工号'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '编号',\n      dataIndex: 'index',\n      editable: false,\n      align: 'center'\n    }, {\n      title: '题目',\n      dataIndex: 'item',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '导师',\n      dataIndex: 'teacher',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '工号',\n      dataIndex: 'cno',\n      editable: true,\n      align: 'center'\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        index: '1',\n        item: '填写题目',\n        teacher: '填写导师',\n        cno: '填写工号'\n      }],\n      count: 1,\n      lno: '',\n      titile: '',\n      university: '',\n      college: '',\n      startTime: '',\n      endTime: ''\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\u5B66\\u6821: \"), React.createElement(Input, {\n      className: \"inp-school\",\n      value: \"\\u897F\\u5B89\\u79D1\\u6280\\u5927\\u5B66\",\n      id: \"inp-school\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"\\u5B66\\u9662: \"), React.createElement(Input, {\n      className: \"inp-collage\",\n      value: \"\\u7535\\u63A7\\u5B66\\u9662\",\n      id: \"inp\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"\\u5F00\\u59CB\\u65F6\\u95F4: \"), React.createElement(DatePicker, {\n      className: \"date\",\n      onChange: this.onChangeBengin,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"\\u7ED3\\u675F\\u65F6\\u95F4: \"), React.createElement(DatePicker, {\n      className: \"date\",\n      onChange: this.onChangeLast,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"primary\",\n      className: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      size: 'middle',\n      pagination: {\n        pageSize: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }));\n  }\n\n} // // ReactDOM.render(<EditableTable />, mountNode);\n// class subjectIssue extends Component {\n//   onChange = (date) => {\n//     console.log(date);\n//   }\n//   handleChange = (value) => {\n//     console.log(`selected ${value}`)\n//   }\n//   handleSubmit = () => {\n//   }\n//   render() {\n//     return (\n//       <div id=\"main\" style={{ height: 500 }}>\n//         <label>学校: </label>\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\n//         <label>学院: </label>\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\n//         <span>开始时间: </span>\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\n//         <span>结束时间: </span>\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\n//         <EditableTable />\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\n//           Submit\n//         </Button>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default subjectIssue;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\GDOM\\GDOM\\gdom\\src\\components\\subjectIssue\\subjectIssue.js"],"names":["React","Component","Table","Input","Button","Popconfirm","Form","ajax","qs","Select","DatePicker","Option","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","subjectIssue","constructor","onChangeBengin","date","console","log","onChangeLast","data","handleChange","value","handleSubmit","dataSource","uid","lno","titile","university","college","startTime","endTime","reqResult","JSON","stringify","then","res","catch","err","handleDelete","key","filter","item","handleAdd","count","newData","teacher","cno","row","findIndex","splice","columns","align","components","body","cell","map","col","onCell","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// import { Input } from 'antd';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport './subjectIssue.css';\r\nimport ajax from '../../api/ajax';\r\nimport qs from 'qs';\r\nimport { Select } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nconst Option = Select.Option;\r\n\r\n// const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n        <div\r\n          className=\"editable-cell-value-wrap\"\r\n          style={{ paddingRight: 24 }}\r\n          onClick={this.toggleEdit}\r\n        >\r\n          {children}\r\n        </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n            children\r\n          )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass subjectIssue extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '编号',\r\n        dataIndex: 'index',\r\n        editable: false,\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '题目',\r\n        dataIndex: 'item',\r\n        editable: true,\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: '导师',\r\n        dataIndex: 'teacher',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '工号',\r\n        dataIndex: 'cno',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          index: '1',\r\n          item: '填写题目',\r\n          teacher: '填写导师',\r\n          cno: '填写工号',\r\n        },\r\n      ],\r\n      count: 1,\r\n      lno: '', \r\n      titile: '', \r\n      university: '', \r\n      college: '', \r\n      startTime: '',\r\n      endTime: ''\r\n    };\r\n  }\r\n\r\n  onChangeBengin = (date) => {\r\n    console.log(date);\r\n  }\r\n\r\n  onChangeLast = (data) => {\r\n    console.log(data)\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    console.log(`selected ${value}`)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    console.log(this.state.dataSource);\r\n    const { dataSource, uid, lno,titile,university,college,startTime,endTime} = this.state;\r\n    const data = [{ \"lno\": \"16666\", \"titile\": \"sbbbsf\", \"university\": \"西科大\", \"college\": \"电控\", \"startTime\": '2016-03-03 00:00:00', \"endTime\": '2016-03-03 00:00:00' }];\r\n    const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/publish', JSON.stringify(data), 'post');\r\n    reqResult(data).then(res => {\r\n      console.log(res);\r\n      // const data = res.data;\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      index: count,\r\n      item: '填写题目',\r\n      teacher: '填写导师',\r\n      cno: '填写工号',\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <label>学校: </label>\r\n        <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\r\n        <label>学院: </label>\r\n        <Input className=\"inp-collage\" value=\"电控学院\" id=\"inp\" size=\"large\" />\r\n        <span>开始时间: </span>\r\n        <DatePicker className=\"date\" onChange={this.onChangeBengin} placeholder=\"请选择日期\" size=\"large\" />\r\n        <span>结束时间: </span>\r\n        <DatePicker className=\"date\" onChange={this.onChangeLast} placeholder=\"请选择日期\" size=\"large\" />\r\n        {/* <EditableTable /> */}\r\n        <Button onClick={this.handleSubmit} type=\"primary\" className=\"Submit\">\r\n          提交\r\n        </Button>\r\n        {/* <Button onClick={this.handleAdd} type=\"primary\" className=\"add\" >\r\n          增加一行\r\n        </Button> */}\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          size={'middle'}\r\n          pagination={{ pageSize: 3 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// // ReactDOM.render(<EditableTable />, mountNode);\r\n// class subjectIssue extends Component {\r\n//   onChange = (date) => {\r\n//     console.log(date);\r\n//   }\r\n\r\n//   handleChange = (value) => {\r\n//     console.log(`selected ${value}`)\r\n//   }\r\n\r\n//   handleSubmit = () => {\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div id=\"main\" style={{ height: 500 }}>\r\n//         <label>学校: </label>\r\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\r\n//         <label>学院: </label>\r\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\r\n//         <span>开始时间: </span>\r\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n//         <span>结束时间: </span>\r\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n//         <EditableTable />\r\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n//           Submit\r\n//         </Button>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default subjectIssue;\r\n"]},"metadata":{},"sourceType":"module"}