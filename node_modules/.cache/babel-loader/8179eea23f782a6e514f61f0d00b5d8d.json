{"ast":null,"code":"import _objectSpread from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"c:\\\\Users\\\\yangzhuo_sx\\\\Desktop\\\\GDOM\\\\GDOM\\\\gdom\\\\src\\\\components\\\\addUser\\\\addUser.js\";\nimport React, { Component } from 'react'; // import { Input } from 'antd';\n\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\nimport './addUser.css';\nimport ajax from '../../api/ajax';\nimport qs from 'qs';\nimport { Select } from 'antd';\nimport { DatePicker } from 'antd';\nconst Option = Select.Option; // const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false,\n      uid: ''\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nclass addUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      this.setState({\n        uid: this.props.uid\n      });\n    };\n\n    this.componentDidMount = () => {\n      const uid = this.state.uid;\n      const data = {\n        \"uid\": uid\n      };\n\n      const reqResult = data => ajax('http://47.94.103.140/gdom/lecture/mutilregister', qs.stringify(data), 'post');\n\n      reqResult(data).then(res => {\n        console.log(res);\n        const data = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onChange = date => {\n      console.log(date);\n    };\n\n    this.handleChange = value => {\n      console.log(\"selected \".concat(value));\n    };\n\n    this.handleSubmit = () => {\n      console.log(this.state.dataSource);\n    };\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            dataSource = _this$state.dataSource;\n      const newData = {\n        key: count,\n        index: count,\n        name: '填写姓名',\n        cno: '填写学号',\n        sex: '填写性别',\n        professional: '填写专业',\n        clazz: '填写班级'\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '编号',\n      dataIndex: 'index',\n      editable: false,\n      align: 'center'\n    }, {\n      title: '姓名',\n      dataIndex: 'name',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '工号',\n      dataIndex: 'cno',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '专业',\n      dataIndex: 'professional',\n      editable: true,\n      align: 'center'\n    }, {\n      title: '班级',\n      dataIndex: 'clazz',\n      editable: true,\n      align: 'center'\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        index: '1',\n        name: '填写姓名',\n        cno: '填写学号',\n        sex: '填写性别',\n        professional: '填写专业',\n        clazz: '填写班级'\n      }],\n      count: 1,\n      uid: ''\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"\\u5B66\\u6821: \"), React.createElement(Input, {\n      className: \"inp-school\",\n      value: \"\\u897F\\u5B89\\u79D1\\u6280\\u5927\\u5B66\",\n      id: \"inp-school\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"\\u5B66\\u9662: \"), React.createElement(Input, {\n      className: \"inp-collage\",\n      value: \"\\u7535\\u6C14\\u4E0E\\u63A7\\u5236\\u5DE5\\u7A0B\\u5B66\\u9662\",\n      id: \"inp\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"\\u5165\\u5B66\\u65F6\\u95F4: \"), React.createElement(DatePicker, {\n      className: \"date\",\n      onChange: this.onChange,\n      placeholder: \"\\u8BF7\\u9009\\u62E9\\u65E5\\u671F\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"\\u89D2\\u8272\\u9009\\u62E9: \"), React.createElement(Select, {\n      className: \"select\",\n      style: {\n        width: 150\n      },\n      onChange: this.handleChange,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\\u5B66\\u751F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"\\u5B66\\u751F\"), React.createElement(Option, {\n      value: \"\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"\\u8001\\u5E08\"), React.createElement(Option, {\n      value: \"\\u8D85\\u7EA7\\u8001\\u5E08\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"\\u8D85\\u7EA7\\u8001\\u5E08\")), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"primary\",\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      className: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"\\u589E\\u52A0\\u4E00\\u884C\"), React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      size: 'middle',\n      pagination: {\n        pageSize: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }));\n  }\n\n} // ReactDOM.render(<EditableTable />, mountNode);\n// export class addUser extends Component {\n//   onChange = (date) => {\n//     console.log(date);\n//   }\n//   handleChange = (value) => {\n//     console.log(`selected ${value}`)\n//   }\n//   handleSubmit = () => {\n//   }\n//   render() {\n//     return (\n//       <div id=\"main\" style={{ height: 500 }}>\n//         <label>学校: </label>\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\n//         <label>学院: </label>\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\n//         <span>入学时间: </span>\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\n//         <span>角色选择: </span>\n//         <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\n//           <Option value=\"学生\">学生</Option>\n//           <Option value=\"老师\">老师</Option>\n//           <Option value=\"超级老师\" >超级老师</Option>\n//         </Select>\n//         <EditableTable />\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\n//           Submit\n//         </Button>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default addUser;","map":{"version":3,"sources":["c:\\Users\\yangzhuo_sx\\Desktop\\GDOM\\GDOM\\gdom\\src\\components\\addUser\\addUser.js"],"names":["React","Component","Table","Input","Button","Popconfirm","Form","ajax","qs","Select","DatePicker","Option","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","state","editing","uid","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","addUser","constructor","componentWillMount","componentDidMount","data","reqResult","stringify","then","res","console","log","catch","err","onChange","date","handleChange","value","handleSubmit","dataSource","handleDelete","key","filter","item","handleAdd","count","newData","name","cno","sex","professional","clazz","row","findIndex","splice","columns","align","components","body","cell","map","col","onCell","width","marginBottom","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n// import { Input } from 'antd';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport './addUser.css'\r\nimport ajax from '../../api/ajax'\r\nimport qs from 'qs'\r\nimport { Select } from 'antd';\r\nimport { DatePicker } from 'antd';\r\nconst Option = Select.Option;\r\n// const { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends Component {\r\n  state = {\r\n    editing: false,\r\n    uid: ''\r\n  };\r\n\r\n \r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n        <div\r\n          className=\"editable-cell-value-wrap\"\r\n          style={{ paddingRight: 24 }}\r\n          onClick={this.toggleEdit}\r\n        >\r\n          {children}\r\n        </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n            children\r\n          )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass addUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: '编号',\r\n        dataIndex: 'index',\r\n        editable: false,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '工号',\r\n        dataIndex: 'cno',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '专业',\r\n        dataIndex: 'professional',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '班级',\r\n        dataIndex: 'clazz',\r\n        editable: true,\r\n        align: 'center'\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          index: '1',\r\n          name: '填写姓名',\r\n          cno: '填写学号',\r\n          sex: '填写性别',\r\n          professional: '填写专业',\r\n          clazz: '填写班级'\r\n        },\r\n        // {\r\n        //   key: '1',\r\n        //   index: '1',\r\n        //   name: '杨卓',\r\n        //   cno: '16406050305',\r\n        //   sex: '女',\r\n        //   professional: '自动化',\r\n        //   clazz: '1603班'\r\n        // },\r\n        // {\r\n        //   key: '2',\r\n        //   index: '1',\r\n        //   name: '杨卓',\r\n        //   cno: '16406050305',\r\n        //   sex: '女',\r\n        //   professional: '自动化',\r\n        //   clazz: '1603班'\r\n        // },\r\n      ],\r\n      count: 1,\r\n      uid: ''\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.setState({uid: this.props.uid});\r\n }\r\n\r\n componentDidMount = () => {\r\n   const {uid} = this.state;\r\n   const data = {\"uid\":uid};\r\n   const reqResult = (data) => ajax('http://47.94.103.140/gdom/lecture/mutilregister', qs.stringify(data), 'post');\r\n   reqResult(data).then(res => {\r\n    console.log(res);\r\n    const data = res.data;\r\n   }).catch(err => {\r\n     console.log(err);\r\n   })\r\n }\r\n\r\n\r\n  onChange = (date) => {\r\n    console.log(date);\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    console.log(`selected ${value}`)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n   console.log(this.state.dataSource);\r\n  }\r\n\r\n  handleDelete = key => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      index: count,\r\n      name: '填写姓名',\r\n      cno: '填写学号',\r\n      sex: '填写性别',\r\n      professional: '填写专业',\r\n      clazz: '填写班级'\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = row => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row,\r\n    });\r\n    this.setState({ dataSource: newData });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <label>学校: </label>\r\n        <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\r\n        <label>学院: </label>\r\n        <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\r\n        <span>入学时间: </span>\r\n        <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n        <span>角色选择: </span>\r\n        <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\r\n          <Option value=\"学生\">学生</Option>\r\n          <Option value=\"老师\">老师</Option>\r\n          <Option value=\"超级老师\" >超级老师</Option>\r\n        </Select>\r\n        <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n          提交\r\n        </Button>\r\n        <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }} className=\"add\">\r\n          增加一行\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          size={'middle'}\r\n          pagination={{ pageSize: 3 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<EditableTable />, mountNode);\r\n\r\n// export class addUser extends Component {\r\n//   onChange = (date) => {\r\n//     console.log(date);\r\n//   }\r\n\r\n//   handleChange = (value) => {\r\n//     console.log(`selected ${value}`)\r\n//   }\r\n\r\n//   handleSubmit = () => {\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div id=\"main\" style={{ height: 500 }}>\r\n//         <label>学校: </label>\r\n//         <Input className=\"inp-school\" value=\"西安科技大学\" id=\"inp-school\" size=\"large\" />\r\n//         <label>学院: </label>\r\n//         <Input className=\"inp-collage\" value=\"电气与控制工程学院\" id=\"inp\" size=\"large\" />\r\n//         <span>入学时间: </span>\r\n//         <DatePicker className=\"date\" onChange={this.onChange} placeholder=\"请选择日期\" size=\"large\" />\r\n//         <span>角色选择: </span>\r\n//         <Select className=\"select\" style={{ width: 150 }} onChange={this.handleChange} size=\"large\">\r\n//           <Option value=\"学生\">学生</Option>\r\n//           <Option value=\"老师\">老师</Option>\r\n//           <Option value=\"超级老师\" >超级老师</Option>\r\n//         </Select>\r\n//         <EditableTable />\r\n//         <Button onClick={this.handleSubmit} type=\"primary\" className=\"submit\">\r\n//           Submit\r\n//         </Button>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default addUser;\r\n"]},"metadata":{},"sourceType":"module"}